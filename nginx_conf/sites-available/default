# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
upstream django_8080 {    
	server 127.0.0.1:8080;
}

server {
	listen 80;
	server_name cloud.sample.com;
	charset utf-8;
	location / {
		uwsgi_pass  django_8080;
		include uwsgi_params;
	}
	location /static {
        expires 30d;
        autoindex on;
        add_header Cache-Control private;
        alias /var/www/icloud/web/icycloud/webui/static/;
		## 为了保证 django能够使用管理页面,还需要对一些admin的静态文件进行软连接
		## 我是在 static/admin -> /usr/local/lib/python2.7/dist-packages/django/contrib/admin/static/admin/
    }
}

server {
	listen   80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6

	server_name *.cloud.sample.com;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;

	location / {
		# 使用这种方式就可以不用自己编译模块了,原生的就可以了
		# 当然这个路由就别用了(我已经这么长了,应该不会被用了吧)
        auth_request /route-proxy-not-use-this-url;
        auth_request_set  $url $sent_http_url;
        proxy_pass  $url;
    }
    location /route-proxy-not-use-this-url {
            proxy_pass http://127.0.0.1:8800/auth;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-HOST $http_host;
    }
}